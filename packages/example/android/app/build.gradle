plugins {
  id 'org.jetbrains.kotlin.android'
  id 'com.android.application'
  id 'com.facebook.react'
}

react {
  //  The root of your project, i.e. where "package.json" lives. Default is '../..'
  // root = file("../../")
  //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native
  // reactNativeDir = file("../../node_modules/react-native")
  //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen/.codegenDir = file("../../../../node_modules/@react-native/codegen")
  //   The cli.js file which is the React Native CLI entrypoint. Default is ../../node_modules/react-native/cli.js
  // cliFile = file("../../node_modules/react-native/cli.js")
  /* Variants */
  //   The list of variants to that are debuggable. For those we're going to
  //   skip the bundling of the JS bundle and the assets. By default is just 'debug'.
  //   If you add flavors like lite, prod, etc. you'll have to list your debuggableVariants.
  // debuggableVariants = ["liteDebug", "prodDebug"]
  /* Bundling */
  //   A list containing the node command and its flags. Default is just 'node'.
  // nodeExecutableAndArgs = ["node"]
  //
  //   The command to run when bundling. By default is 'bundle'
  // bundleCommand = "ram-bundle"
  //
  //   The path to the CLI configuration file. Default is empty.
  // bundleConfig = file(../rn-cli.config.js)
  //
  //   The name of the generated asset file containing your JS bundle
  // bundleAssetName = "MyApplication.android.bundle"
  //
  //   The entry file for bundle generation. Default is 'index.android.js' or 'index.js'
  // entryFile = file("../js/MyApplication.android.js")
  //
  //   A list of extra flags to pass to the 'bundle' commands.
  //   See https://github.com/react-native-community/cli/blob/main/docs/commands.md#bundle
  // extraPackagerArgs = []
  /* Hermes Commands */
  //   The hermes compiler command to run. By default it is 'hermesc'
  // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
  //
  //   The list of flags to pass to the Hermes compiler. By default is "-O", "-output-source-map"
  // hermesFlags = ["-O", "-output-source-map"]

  /* Autolinking */
  autolinkLibrariesWithApp()
}

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false
/**
 * The preferred build flavor of JavaScriptCore (JSC)
 *
 * For example, to use the international variant, you can use:
 * `def jscFlavor = io.github.react-native-community:jsc-android-intl:2026004.+`
 *
 * The international variant includes ICU i18n library and necessary data
 * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
 * give correct results when using with locales other than en-US. Note that
 * this variant is about 6MiB larger per architecture than default.
 */
def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

java {
  toolchain {
    languageVersion.set(JavaLanguageVersion.of(17))
  }
}

android {
  ndkVersion rootProject.ext.ndkVersion

  buildToolsVersion rootProject.ext.buildToolsVersion
  compileSdk rootProject.ext.compileSdkVersion

  namespace "com.example"

  buildFeatures {
    buildConfig true
  }

  defaultConfig {
    applicationId "com.example"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode 1
    versionName "1.0"

    signingConfigs {
      debug {
        storeFile file('debug.keystore')
        storePassword 'android'
        keyAlias 'androiddebugkey'
        keyPassword 'android'
      }
    }
  }

  buildTypes {
    debug {
      signingConfig signingConfigs.debug
    }
    release {
      // Caution! In production, you need to generate your own keystore file.
      // see https://reactnative.dev/docs/signed-apk-android.
      signingConfig signingConfigs.debug
      minifyEnabled enableProguardInReleaseBuilds
      proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
    }
  }

  packagingOptions {
    pickFirst "**/libc++_shared.so"
    pickFirst "**/libreact_featureflagsjni.so"
  }
}

repositories {
  maven {
    url "${KLARNA_DISTRIBUTION_URL}"
  }
  mavenLocal()
}

dependencies {
  implementation 'androidx.appcompat:appcompat:1.7.1'
  implementation fileTree(dir: "libs", include: ["*.jar"])

  implementation project(':primerioreactnative')

  implementation "io.primer:3ds-android:1.6.2"
  implementation "io.primer:ipay88-my-android:1.0.3"
  implementation "io.primer:klarna-android:1.2.0"
  implementation "io.primer:stripe-android:1.1.2"

  // The version of react-native is set by the React Native Gradle Plugin
  implementation("com.facebook.react:react-android")
  if (hermesEnabled.toBoolean()) {
    implementation("com.facebook.react:hermes-android")
  } else {
    implementation jscFlavor
  }
}
