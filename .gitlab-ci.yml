# TODO: trigger only on release tag

stages:
  - safety-checks
  - check-ios-published
  - build
  - release

variables:
  NODE_VERSION: "16.19.0"

#TODO: pending moving following block to https://gitlab.com/primer-io/internal-efficiency/gitlab-cicd-templates/-/blob/b6a569c5ce4473a9e06c8448ce10b1be2b732379/templates/utils.yml
# # Prepare

# export CIRCLE_TAG="v${tag}"
# export CIRCLE_BUILD_NUM=0
# export CIRCLE_SHA1=`git rev-parse HEAD`


# if [[ $CIRCLE_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+-alpha\.[0-9]+$ ]]; then
#   RELEASE_TYPE='alpha'
# elif [[ $CIRCLE_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+-beta\.[0-9]+$ ]]; then
#   RELEASE_TYPE='beta'
# elif [[ $CIRCLE_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
#   RELEASE_TYPE='latest'
# else
#   exit
# fi


# MAJOR_VERSION=`echo ${CIRCLE_TAG} | cut -d . -f 1 | cut -c 2-`

# if [[ $MAJOR_VERSION = "2" ]]; then
#   DIST_TAG="${RELEASE_TYPE}"
# else
#   DIST_TAG="v${MAJOR_VERSION}-${RELEASE_TYPE}"
# fi

check-android-published:
  stage: safety-checks
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/alpine:latest
  script: 
    - |
      apk add curl grep
      echo -e "\e[33mExtracting Android Version from build.gradle..."
      ANDROID_VERSION=`cat ./android/build.gradle  | grep -Po "implementation 'io.primer:android:\K[^']*"`
      echo -e "\e[33mAndroid Version: $ANDROID_VERSION"

      echo -e "\e[33mChecking that Android version $ANDROID_VERSION is available on maven..."
      ANDROID_VERSION_STATUS_CODE=`curl -o /dev/null -s -w "%{http_code}\n" "https://central.sonatype.com/artifact/io.primer/android/${ANDROID_VERSION}"`
      echo $ANDROID_VERSION_STATUS_CODE

      if [ $ANDROID_VERSION_STATUS_CODE -ne "200" ]; then
          echo -e "\e[31mCannot find Android SDK Version $ANDROID_VERSION. Exiting."
          exit 1
      fi

check-ios-published:
  stage: safety-checks
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/alpine:latest
  script:
    - |
      apk add curl grep
      echo -e "\e[33mExtracting iOS Version from podspec..."
      IOS_VERSION=`cat primer-io-react-native.podspec  | grep -Po "\"PrimerSDK\", \"\K[^\"]*"`
      echo -e "\e[33miOS Version: $IOS_VERSION"

      echo -e "\e[33mChecking that iOS version $IOS_VERSION is available on the master Cocoapods Specs..."
      IOS_COCOAPODS_STATUS_CODE=`curl --silent --output /dev/stderr --write-out "%{http_code}" "https://raw.githubusercontent.com/CocoaPods/Specs/master/Specs/e/0/5/PrimerSDK/${IOS_VERSION}/PrimerSDK.podspec.json"`

      if [ $IOS_COCOAPODS_STATUS_CODE -ne "200" ]; then
          echo -e "\e[31mCouldn't find Version $IOS_VERSION of PrimerSDK on Cocoapods. Exiting."
          exit 1
      fi

build:
  stage: build
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/node:$NODE_VERSION-bullseye-slim
  script:
    - rm -rf ./example ./example_0_70_6
    - npm set registry https://registry.npmjs.org/
    - npm set //registry.npmjs.org/:_authToken $NPM_TOKEN
    - ls
    - yarn install
    - ls
  needs:
    - check-android-published
    - check-ios-published
  artifacts:
    paths:
      - lib

# release:
#   stage: release
#   image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/node:$NODE_VERSION-bullseye-slim
#   script:
#     - npm
#   environment: production
#   when: manual